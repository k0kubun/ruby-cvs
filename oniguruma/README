README  2002/03/06

Oni Guruma (regular expression library)

Copyright (C) 2002  K.Kosako (kosako@sofnec.co.jp)


Install into Ruby

   1. Copy regex.h and regex.c into ruby source directory.
   2. Apply a patch file to re.c.
      re.c.166.patch for Ruby 1.6.6
      re.c.172.patch for Ruby 1.7.2
   3. make clean
   4. make


Differences with GNU regex(version 0.12)

   + has a original native API. (Thread safe?  I hope so.)
   + has modified GNU regex API.
      - re_compile_fastmap() is removed. (no needs to call)
      - re_recompile_pattern() is added.
      - re_alloc_pattern() is added.
      - error messages are different.

   + look-behind (?<=fixed-char-length-pattern) and
                 (?<!fixed-char-length-pattern) are added.
     (char-class, anychar(.) and anchor(^$ only) are allowed.)
   + Octal or hexadecimal number sequence can be treated as 
     a multibyte code char in char-class, if multibyte encoding is specified.
     (ex. [\xa1\xa2], [\xa1\xa7-\xa4\xa1])
   + Effect range of isolated option is to next ')'.
     ex. (?:(?i)a|b) is interpreted as (?:(?i:a|b)), not (?:(?i:a)|b).
   + Negative POSIX bracket [:^xxxx:] is supported.
   + POSIX bracket [:ascii:] is added.


ToDo

   + expand repeated exact string. ex. /(?:aaa){10}/
   + GNU Autoconf
   + Add a new opcode for anystar(.*) and exact combination.
     [anystar, exact, ...] -> [anystar-peek-next, exact, ...]
   + Add a new stack type for anystar(.*) matching process.
     [STK_ANYCHAR_STAR, address, str-low, str-now]
   + get tail exact string optimizing info. ex. /X((.*).)+X/
     (by adding backward link to NCONS ?)
   + script program for test and benchmark.

   ? reduce null-check range in compile time.
     (add new opcode OP_NULL_CHECK_END_JUMP ?)
   ? add a new opcode for exact pattern in look-behind.
   ? merge re_alloc_pattern() with re_compile_pattern().
  ?? convert function name style from CamelCase to underline_separation.
  ?? postponed regular subexpression. /(?p{Ruby code...})/
 ??? POSIX compatible API

 and I'm thankful to Akinori MUSHA.


History

2002/03/06: [bug]  if pattern has NULL(\000) char, infinite loop happens 
                   in ScanMakeNode(). (beware of strchr(). thanks nobu)
2002/03/06: [bug]  range argument of ForwardSearchRange() is wrong.
                   ex. /\A.a/, /\G.a/ mismatched with "aa". (thanks nobu)
2002/03/05: [new]  add RegexMatch() API. rename regexMatch() to matchAt().
2002/03/05: [impl] change function definition style.
2002/03/05: [impl] abolish use of macro symbol which name begin with underline.
2002/03/04: [bug]  make up a break-statement in compileTree().
                   (compile error on Mac OS X 10.1.3)

2002/03/04: Version 1.1

2002/03/04: [impl] replace STK_BOTTOM with STK_ALT.
2002/03/02: [impl] add new opcode OP_FINISH and new stack type
                   STK_BOTTOM for (little bit) speed up STACK_POP.
2002/03/02: [impl] add new opcode OP_EXACT1_IC, OP_EXACTN_IC
                   for compile time ignore case check.
                   remove opcode OP_EXACT1_RAW, OP_EXACTN_RAW.
2002/03/02: [impl] add OpTime info to statistical data.
2002/02/28: [bug]  sub_anchor($) in ForwardSearch() and BackwardSearch().
                   ex. /$\x0az/.match("\nz")
2002/02/28: [new]  look-behind (?<=pattern), (?<!pattern).
2002/02/27: [bug]  use StackIndex instead of StackType* for realloc problem.
2002/02/27: [impl] use m17n_codepoint() as mb2wc() in REG_RUBY_M17N.
2002/02/27: [spec] undefined POSIX bracket /[[:xyz:]]/ should be syntax error.
2002/02/26: [bug]  ex. /$*/, /[a-]/, /((?i)a)b/   (thanks matz)

2002/02/25: Version 1.0 (first release)

--
[bug:  bug fix]
[new:  new feature]
[spec: specification change]
[impl: implementation change]
[inst: changes for installation]
